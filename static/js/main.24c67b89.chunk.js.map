{"version":3,"sources":["static/constants/apiConstants.js","static/constants/labelConstants.js","components/Loading/Loading.js","components/Span/Span.js","components/Button/Button.js","components/Anchor/Anchor.js","components/NewsItem/NewsItem.js","utility/appUtility.js","components/Footer/Footer.js","utility/serviceUtility.js","components/News/News.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["urlConfilg","url","logoUrl","labelConstants","BY","HIDE","DAYS","HOURS","MINUTES","SECONDS","AGO","MORE","LOADING","TOP","NEW","SPLIT","Loading","react_default","a","createElement","Span","props","className","children","Button","news","onClick","title","id","objectID","Anchor","target","ariaLabel","href","aria-label","NewsItem","upvote","hideNews","key","Span_Span","num_comments","points","components_Button_Button","react_fontawesome_index_es","icon","faCaretUp","components_Anchor_Anchor","split","author","seconds","minutes","hours","date","Date","createdAt","created_at","timeDiff","getTime","days","Math","ceil","stalenessOfNews","Footer","sendRequest","_ref","pageCount","fetch","then","res","json","News","_useState","useState","hits","_useState2","Object","slicedToArray","state","setState","useEffect","data","localStorage","setItem","JSON","stringify","event","parse","getItem","index","findIndex","currentTarget","objectSpread","splice","length","Loading_Loading","map","components_NewsItem_NewsItem","Footer_Footer","Header","src","alt","height","width","App","Fragment","components_Header_Header","components_News_News","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVACMA,SAAa,CACjBC,IAAK,gEACLC,QAAS,aCDLC,EAAiB,CACrBC,GAAI,KACJC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,QAAS,UACTC,IAAK,MACLC,KAAM,OACNC,QAAS,aACTC,IAAK,MACLC,IAAK,MACLC,MAAO,MCRMC,MAHf,WACE,OAAOC,EAAAC,EAAAC,cAAA,SAAIhB,EAAeS,gBCFb,SAASQ,EAAKC,GAC7B,OAAOJ,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAClBD,EAAME,kCCaIC,MAbf,SAAgBH,GAAO,IACbI,EAAyBJ,EAAzBI,KAAMC,EAAmBL,EAAnBK,QAASC,EAAUN,EAAVM,MACvB,OACEV,EAAAC,EAAAC,cAAA,UACEG,UAAU,cACVM,GAAIH,GAAQA,EAAKI,SACjBF,MAAOA,EACPD,QAASA,GAERL,EAAME,iBCDEO,MARf,SAAgBT,GAAO,IACbI,EAA4BJ,EAA5BI,KAAMM,EAAsBV,EAAtBU,OAAQC,EAAcX,EAAdW,UACtB,OACEf,EAAAC,EAAAC,cAAA,KAAGc,KAAMR,GAAQA,EAAKxB,IAAK8B,OAAQA,EAAQG,aAAYF,GACpDX,EAAME,iBC4CEY,MAxCf,SAAkBd,GAAO,IACfI,EAA2BJ,EAA3BI,KAAMW,EAAqBf,EAArBe,OAAQC,EAAahB,EAAbgB,SACtB,OACEpB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAMgB,IAAKb,EAAKI,UAC7BZ,EAAAC,EAAAC,cAACoB,EAAD,CAAMd,KAAMA,GACVR,EAAAC,EAAAC,cAAA,cAASM,EAAKe,eAEhBvB,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAAA,cAASM,EAAKgB,OAAS,KACvBxB,EAAAC,EAAAC,cAACuB,EAAD,CAAQjB,KAAMA,EAAMC,QAASU,EAAQT,MAAM,UACzCV,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBf,GAAIH,EAAKI,SAAUe,KAAMC,QAG9C5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,CAAQrB,KAAMA,EAAMO,UAAU,qBAAqBD,OAAO,UACxDd,EAAAC,EAAAC,cAAA,cAASM,EAAKE,MAAQ,MAExBV,EAAAC,EAAAC,cAAC2B,EAAD,CAAQrB,KAAMA,EAAMO,UAAU,mBAAmBD,OAAO,UACtDd,EAAAC,EAAAC,cAAA,SAAI,MAAQM,EAAKxB,KAAOwB,EAAKxB,IAAI8C,MAAM,KAAK,IAAM,SAGtD9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQ,IAAMhB,EAAeC,GAAK,KAClCa,EAAAC,EAAAC,cAAC2B,EAAD,CAAQrB,KAAMA,EAAMO,UAAU,sBAAsBD,OAAO,UACzDd,EAAAC,EAAAC,cAAA,cAASM,EAAKuB,SAEhB/B,EAAAC,EAAAC,cAAA,SAAI,IClCd,SAAyBM,GACrB,IAGIwB,EACFC,EACAC,EALEC,EAAO,IAAIC,KACXC,EAAY,IAAID,KAAK5B,EAAK8B,YAC1BC,EAAWJ,EAAKK,UAAYH,EAAUG,UAIxCC,EAAO,EAKT,OAJAT,EAAUU,KAAKC,KAAKJ,EAAW,MACjB,KAAIN,EAAUS,KAAKC,KAAKX,EAAU,KAC5CC,EAAU,KAAIC,EAAQQ,KAAKC,KAAKV,EAAU,KAC1CC,EAAQ,KAAIO,EAAOC,KAAKC,KAAKT,EAAQ,KAEtCO,GAAQA,EAAO,IAAIvD,EAAeG,KAAK,IAAIH,EAAeO,KAC1DyC,GAASA,EAAQ,IAAIhD,EAAeI,MAAM,IAAIJ,EAAeO,KAC7DwC,GAAWA,EAAU,IAAI/C,EAAeK,QAAQ,IAAIL,EAAeO,KACnEuC,GAAWA,EAAU,IAAI9C,EAAeM,QAAQ,IAAIN,EAAeO,IDkBtDmD,CAAgBpC,GAAQ,KAClCR,EAAAC,EAAAC,cAACuB,EAAD,CAAQjB,KAAMA,EAAMC,QAASW,GAC3BpB,EAAAC,EAAAC,cAAA,aAAQ,MACRF,EAAAC,EAAAC,cAAA,UAAQS,GAAIH,EAAKI,SAAUF,MAAM,QAC9BxB,EAAeE,MAElBY,EAAAC,EAAAC,cAAA,aAAQ,WEvCL2C,MAHf,SAAgBzC,GACd,OAAOJ,EAAAC,EAAAC,cAAA,cAASE,EAAME,WCAxB,SAASwC,EAATC,GAAoC,IAAbC,EAAaD,EAAbC,UACrB,OAAOC,MAAMlE,EAAWC,IAAMgE,GAAWE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SC0D5CC,MArDf,WAAgB,IAAAC,EACYC,mBAAS,CAAEC,KAAM,GAAIR,UAAW,IAD5CS,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACPM,EADOH,EAAA,GACAI,EADAJ,EAAA,GAEdK,oBAAU,WACRhB,EAAYc,GAAOV,KAAK,SAAAa,GACtBF,EAAS,CAAEL,KAAMO,EAAKP,KAAMR,UAAWY,EAAMZ,UAAY,IACzDgB,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAKP,UAElDI,EAAMZ,WACT,IAAM7B,EAAS,SAAAiD,GACb,IAAIZ,EAAOU,KAAKG,MAAML,aAAaM,QAAQ,SAErCC,EAAQf,EAAKgB,UADI,SAAAhB,GAAI,OAAIA,EAAK5C,WAAawD,EAAMK,cAAc9D,KAErE6C,EAAKe,GAAL,OAAwBf,EAAKe,GAAL,OAAwB,EAChDP,aAAaC,QAAQ,OAAQC,KAAKC,UAAUX,IAC5CK,EAASH,OAAAgB,EAAA,EAAAhB,CAAA,GAAKE,EAAN,CAAaJ,KAAMA,MAEvBpC,EAAW,SAAAgD,GACf,IAAIZ,EAAOU,KAAKG,MAAML,aAAaM,QAAQ,SAErCC,EAAQf,EAAKgB,UADI,SAAAhB,GAAI,OAAIA,EAAK5C,WAAawD,EAAMtD,OAAOH,KAE9D6C,EAAKmB,OAAOJ,EAAO,GACnBP,aAAaC,QAAQ,OAAQC,KAAKC,UAAUX,IAC5CK,EAASH,OAAAgB,EAAA,EAAAhB,CAAA,GAAKE,EAAN,CAAaJ,KAAMA,MAS7B,OACExD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACU,IAAtBuD,EAAMJ,KAAKoB,OACV5E,EAAAC,EAAAC,cAAC2E,EAAD,MAEAjB,EAAMJ,KAAKsB,IAAI,SAAAtE,GAAI,OACjBR,EAAAC,EAAAC,cAAC6E,EAAD,CACE1D,IAAKb,EAAKI,SACVJ,KAAMA,EACNY,SAAUA,EACVD,OAAQA,MAIbyC,EAAMJ,KAAKoB,OAAS,EACnB5E,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAACuB,EAAD,CAAQhB,QAvBC,WACfqC,EAAYc,GAAOV,KAAK,SAAAa,GACtBF,EAAS,CAAEL,KAAMO,EAAKP,KAAMR,UAAWY,EAAMZ,UAAY,IACzDgB,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAKP,WAoBjBtE,EAAeQ,OAE3C,aChCKuF,MApBf,WACE,OACEjF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,cAChBL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAD,CAAQd,UAAU,wBAAwBD,OAAO,UAC/Cd,EAAAC,EAAAC,cAAA,OACEgF,IAAKnG,EAAWE,QAChByB,MAAM,eACNyE,IAAI,eACJC,OAAO,OACPC,MAAM,UAGVrF,EAAAC,EAAAC,cAACuB,EAAD,KAASvC,EAAeU,KACxBI,EAAAC,EAAAC,cAAA,aAAQhB,EAAeY,OACvBE,EAAAC,EAAAC,cAACuB,EAAD,KAASvC,EAAeW,QCTjByF,MATf,WACE,OACEtF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,MACAxF,EAAAC,EAAAC,cAACuF,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCZnCC,IAASC,OAAOhG,EAAAC,EAAAC,cAAC+F,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.24c67b89.chunk.js","sourcesContent":["// configuration file for APIs and URLs\r\nconst urlConfilg = {\r\n  url: \"https://hn.algolia.com/api/v1/search_by_date?tags=story&page=\",\r\n  logoUrl: \"logo.gif\"\r\n};\r\nexport { urlConfilg };\r\n","// configuration file for labels\r\n\r\nconst labelConstants = {\r\n  BY: \"by\",\r\n  HIDE: \"hide\",\r\n  DAYS: \"days\",\r\n  HOURS: \"hours\",\r\n  MINUTES: \"minutes\",\r\n  SECONDS: \"seconds\",\r\n  AGO: \"ago\",\r\n  MORE: \"More\",\r\n  LOADING: \"Loading...\",\r\n  TOP: \"top\",\r\n  NEW: \"new\",\r\n  SPLIT: \"| \"\r\n};\r\nexport { labelConstants };\r\n","// component to show loading state \r\nimport React from \"react\";\r\nimport { labelConstants } from \"../../static/constants\";\r\nfunction Loading() {\r\n  return <p>{labelConstants.LOADING}</p>;\r\n}\r\nexport default Loading;\r\n","import React from 'react';\r\nimport \"./Span.scss\";\r\nexport default function Span(props){\r\nreturn <span className=\"comments\">\r\n    {props.children}\r\n</span>\r\n}","// component to show generic button\r\n\r\nimport React from \"react\";\r\nimport \"./Button.scss\";\r\nfunction Button(props) {\r\n  const { news, onClick, title } = props;\r\n  return (\r\n    <button\r\n      className=\"link-button\"\r\n      id={news && news.objectID}\r\n      title={title}\r\n      onClick={onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n","// component to show generic anchor tag\r\n\r\nimport React from \"react\";\r\nimport \"./Anchor.scss\";\r\nfunction Anchor(props) {\r\n  const { news, target, ariaLabel } = props;\r\n  return (\r\n    <a href={news && news.url} target={target} aria-label={ariaLabel}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n}\r\nexport default Anchor;\r\n","// component to render news with metadata\r\n\r\nimport React from \"react\";\r\nimport Span from \"../Span/Span\";\r\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { stalenessOfNews } from \"../../utility/appUtility\";\r\nimport Button from \"../Button/Button\";\r\nimport Anchor from \"../Anchor/Anchor\";\r\nimport { labelConstants } from \"../../static/constants\";\r\nimport \"./NewsItem.scss\";\r\n\r\nfunction NewsItem(props) {\r\n  const { news, upvote, hideNews } = props;\r\n  return (\r\n    <div className=\"row\" key={news.objectID}>\r\n      <Span news={news}>\r\n        <strong>{news.num_comments}</strong>\r\n      </Span>\r\n      <Span>\r\n        <strong>{news.points + \" \"}</strong>\r\n        <Button news={news} onClick={upvote} title=\"Upvote\">\r\n          <FontAwesomeIcon id={news.objectID} icon={faCaretUp} />\r\n        </Button>\r\n      </Span>\r\n      <div className=\"description\">\r\n        <div>\r\n          <Anchor news={news} ariaLabel=\"Title of this news\" target=\"_blank\">\r\n            <strong>{news.title + \" \"}</strong>\r\n          </Anchor>\r\n          <Anchor news={news} ariaLabel=\"Url of this news\" target=\"_blank\">\r\n            <b>{\"( \" + (news.url && news.url.split(\"/\")[2]) + \" ) \"}</b>\r\n          </Anchor>\r\n        </div>\r\n        <div>\r\n          <small>{\" \" + labelConstants.BY + \" \"}</small>\r\n          <Anchor news={news} ariaLabel=\"Author of this news\" target=\"_blank\">\r\n            <strong>{news.author}</strong>\r\n          </Anchor>\r\n          <b>{\" \" + stalenessOfNews(news) + \" \"}</b>\r\n          <Button news={news} onClick={hideNews}>\r\n            <small>{\"[ \"}</small>\r\n            <strong id={news.objectID} title=\"hide\">\r\n              {labelConstants.HIDE}\r\n            </strong>\r\n            <small>{\" ]\"}</small>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default NewsItem;\r\n","// generic utilities of application\r\n\r\nimport {labelConstants} from \"../static/constants\";\r\n\r\n// function to calculate time delay of news\r\nfunction stalenessOfNews(news){\r\n    let date = new Date();\r\n    let createdAt = new Date(news.created_at);\r\n    let timeDiff = date.getTime() - createdAt.getTime();\r\n    let seconds,\r\n      minutes,\r\n      hours,\r\n      days = 0;\r\n    seconds = Math.ceil(timeDiff / 1000);\r\n    if (seconds > 60) minutes = Math.ceil(seconds / 60);\r\n    if (minutes > 60) hours = Math.ceil(minutes / 60);\r\n    if (hours > 24) days = Math.ceil(hours / 24);\r\n    return (\r\n      (days && days + \" \"+labelConstants.DAYS+\" \"+labelConstants.AGO) ||\r\n      (hours && hours + \" \"+labelConstants.HOURS+\" \"+labelConstants.AGO) ||\r\n      (minutes && minutes + \" \"+labelConstants.MINUTES+\" \"+labelConstants.AGO) ||\r\n      (seconds && seconds + \" \"+labelConstants.SECONDS+\" \"+labelConstants.AGO)\r\n    );\r\n  };\r\n\r\n  export {\r\n      stalenessOfNews\r\n    };","// component to show footer\r\n\r\nimport React from \"react\";\r\nfunction Footer(props) {\r\n  return <footer>{props.children}</footer>;\r\n}\r\nexport default Footer;\r\n","// utility to make service calls\r\n\r\nimport { urlConfilg } from \"../static/constants\";\r\n\r\nfunction sendRequest({ pageCount }) {\r\n  return fetch(urlConfilg.url + pageCount).then(res => res.json());\r\n}\r\n\r\nexport { sendRequest };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./News.scss\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport NewsItem from \"../NewsItem/NewsItem\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Button from \"../Button/Button\";\r\nimport { labelConstants } from \"../../static/constants\";\r\nimport { sendRequest } from \"../../utility/serviceUtility\";\r\n\r\nfunction News() {\r\n  const [state, setState] = useState({ hits: [], pageCount: 1 });\r\n  useEffect(() => {\r\n    sendRequest(state).then(data => {\r\n      setState({ hits: data.hits, pageCount: state.pageCount + 1 });\r\n      localStorage.setItem(\"hits\", JSON.stringify(data.hits));\r\n    });\r\n  }, state.pageCount);\r\n  const upvote = event => {\r\n    let hits = JSON.parse(localStorage.getItem(\"hits\"));\r\n    const increaseUpvote = hits => hits.objectID === event.currentTarget.id;\r\n    const index = hits.findIndex(increaseUpvote);\r\n    hits[index][\"points\"] = hits[index][\"points\"] + 1;\r\n    localStorage.setItem(\"hits\", JSON.stringify(hits));\r\n    setState({ ...state, hits: hits });\r\n  };\r\n  const hideNews = event => {\r\n    let hits = JSON.parse(localStorage.getItem(\"hits\"));\r\n    const shouldBeHidden = hits => hits.objectID === event.target.id;\r\n    const index = hits.findIndex(shouldBeHidden);\r\n    hits.splice(index, 1);\r\n    localStorage.setItem(\"hits\", JSON.stringify(hits));\r\n    setState({ ...state, hits: hits });\r\n  };\r\n  const moreNews = () => {\r\n    sendRequest(state).then(data => {\r\n      setState({ hits: data.hits, pageCount: state.pageCount + 1 });\r\n      localStorage.setItem(\"hits\", JSON.stringify(data.hits));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {state.hits.length === 0 ? (\r\n        <Loading />\r\n      ) : (\r\n        state.hits.map(news => (\r\n          <NewsItem\r\n            key={news.objectID}\r\n            news={news}\r\n            hideNews={hideNews}\r\n            upvote={upvote}\r\n          />\r\n        ))\r\n      )}\r\n      {state.hits.length > 0 ? (\r\n        <Footer>\r\n          <Button onClick={moreNews}>{labelConstants.MORE}</Button>\r\n        </Footer>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default News;\r\n","// component for header page\r\n\r\nimport React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { labelConstants, urlConfilg } from \"../../static/constants\";\r\nimport Anchor from \"../Anchor/Anchor\";\r\nimport Button from \"../Button/Button\";\r\nfunction Header() {\r\n  return (\r\n    <header className=\"app-header\">\r\n      <nav>\r\n        <Anchor ariaLabel=\"Hacker news dashboard\" target=\"_blank\">\r\n          <img\r\n            src={urlConfilg.logoUrl}\r\n            title=\"Y Combinator\"\r\n            alt=\"Y Combinator\"\r\n            height=\"20px\"\r\n            width=\"20px\"\r\n          />\r\n        </Anchor>\r\n        <Button>{labelConstants.TOP}</Button>\r\n        <small>{labelConstants.SPLIT}</small>\r\n        <Button>{labelConstants.NEW}</Button>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport News from \"./components/News/News\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <News />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\n/* eslint-disable */\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}